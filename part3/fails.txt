007-field-if.vsop... FAIL

Your compiler detected an error, but input was valid.

Here is the input file:
----------------- 8< -----------------
class GrandParent {
}
class Parent extends GrandParent {
}
class Child extends Parent {
}
class MyClass {
    myField : Parent <- if true then new Child else new Parent;
}
class Main { main() : int32 { 0 } }
----------------- 8< -----------------

Here is your program's error output:
----------------- 8< -----------------
007-field-if.vsop:1:1: semantic error: expected type Child, but found type Parent
----------------- 8< -----------------

Here is the expected standard output:
----------------- 8< -----------------
[Class(GrandParent, Object, [], []), Class(Parent, GrandParent, [], []),
 Class(Child, Parent, [], []),
 Class(MyClass, Object,
   [Field(myField, Parent,
      If(true : bool, New(Child) : Child, New(Parent) : Parent) : Parent)],
   []),
 Class(Main, Object, [], [Method(main, [], int32, [0 : int32] : int32)])]
----------------- 8< -----------------

013-field-equal-unit.vsop... FAIL

Your compiler detected an error, but input was valid.

Here is the input file:
----------------- 8< -----------------
class MyClass {
    (* if-then without else returns () *)
    myField : bool <- () = (if true then 42);
}
class Main { main() : int32 { 0 } }
----------------- 8< -----------------

Here is your program's error output:
----------------- 8< -----------------
013-field-equal-unit.vsop:1:1: semantic error: expected type int32, but found type unit
013-field-equal-unit.vsop:1:1: semantic error: type mismatch: unit and int32
----------------- 8< -----------------

Here is the expected standard output:
----------------- 8< -----------------
[Class(MyClass, Object,
   [Field(myField, bool,
      BinOp(=, () : unit, If(true : bool, 42 : int32) : unit) : bool)],
   []),
 Class(Main, Object, [], [Method(main, [], int32, [0 : int32] : int32)])]
----------------- 8< -----------------

014-field-and.vsop... FAIL

Your compiler's output differs from expected output.

Here is the input file:
----------------- 8< -----------------
class MyClass {
    myField : bool <- (42 = 42) and (0 = 0);
}
class Main { main() : int32 { 0 } }
----------------- 8< -----------------

Here is your program's (standard) output:
----------------- 8< -----------------
[Class(MyClass, Object, [Field(myField, bool, BinOp(and, BinOp(=, 42, 42), BinOp(=, 0, 0)))], []), Class(Main, Object, [], [Method(main, [], int32, [0 : int32] : int32)])]
----------------- 8< -----------------

Here is the expected standard output:
----------------- 8< -----------------
[Class(MyClass, Object,
   [Field(myField, bool,
      BinOp(and, BinOp(=, 42 : int32, 42 : int32) : bool,
        BinOp(=, 0 : int32, 0 : int32) : bool)
      : bool)],
   []),
 Class(Main, Object, [], [Method(main, [], int32, [0 : int32] : int32)])]
----------------- 8< -----------------

015-field-le.vsop... FAIL

Your compiler's output differs from expected output.

Here is the input file:
----------------- 8< -----------------
class MyClass {
    myField : bool <- 17 <= 42;
}
class Main { main() : int32 { 0 } }
----------------- 8< -----------------

Here is your program's (standard) output:
----------------- 8< -----------------
[Class(MyClass, Object, [Field(myField, bool, BinOp(<=, 17, 42))], []), Class(Main, Object, [], [Method(main, [], int32, [0 : int32] : int32)])]
----------------- 8< -----------------

Here is the expected standard output:
----------------- 8< -----------------
[Class(MyClass, Object,
   [Field(myField, bool, BinOp(<=, 17 : int32, 42 : int32) : bool)], [
   ]),
 Class(Main, Object, [], [Method(main, [], int32, [0 : int32] : int32)])]
----------------- 8< -----------------

031-method-if.vsop... FAIL

Your compiler detected an error, but input was valid.

Here is the input file:
----------------- 8< -----------------
class GrandParent {
}
class Parent extends GrandParent {
}
class Child extends Parent {
}
class MyClass {
    myMethod(i : int32) : Parent {
        if i = 42 then new Child
        else new Parent
    }
}
class Main { main() : int32 { 0 } }
----------------- 8< -----------------

Here is your program's error output:
----------------- 8< -----------------
031-method-if.vsop:1:1: semantic error: expected type Child, but found type Parent
----------------- 8< -----------------

Here is the expected standard output:
----------------- 8< -----------------
[Class(GrandParent, Object, [], []), Class(Parent, GrandParent, [], []),
 Class(Child, Parent, [], []),
 Class(MyClass, Object, [],
   [Method(myMethod, [i : int32], Parent,
      [If(BinOp(=, i : int32, 42 : int32) : bool, New(Child) : Child,
         New(Parent) : Parent)
       : Parent]
      : Parent)]),
 Class(Main, Object, [], [Method(main, [], int32, [0 : int32] : int32)])]
----------------- 8< -----------------
